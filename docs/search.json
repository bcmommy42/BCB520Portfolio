[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Betsy Church",
    "section": "",
    "text": "https://linkedin.com\nhttps://github.com\nBetsy Church is a Graduate Student at University of Idaho. Current research project is about the potential effects that a Staph. aureus infection may have on the tissue and secretion microbiomes of artificially induced lactation in heifers. When not in the lab, she can be found crocheting, watching medical drama on tv, or playing video games. Often times, her dog Finn or Cat Olivander can be found snuggled in her lap."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Betsy Church",
    "section": "Education",
    "text": "Education\nUniversity of Idaho | Moscow, ID\nPhD in Nutrition Sciences | August 2023- Present\nWeber State University | Ogden, UT\nBachelor of Science in Microbiology | August 2016- April 2021"
  },
  {
    "objectID": "posts/MarksChannels/index.html",
    "href": "posts/MarksChannels/index.html",
    "title": "“ASSIGNMENT 4”",
    "section": "",
    "text": "Code\n##figure 1\nlibrary(tidyverse)\n\n\nWarning: package 'tidyverse' was built under R version 4.4.2\n\n\nWarning: package 'ggplot2' was built under R version 4.4.2\n\n\nWarning: package 'tidyr' was built under R version 4.4.2\n\n\nWarning: package 'readr' was built under R version 4.4.2\n\n\nWarning: package 'dplyr' was built under R version 4.4.2\n\n\nWarning: package 'forcats' was built under R version 4.4.2\n\n\nWarning: package 'lubridate' was built under R version 4.4.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nBSBC.Data &lt;- read.csv(\"C:/Users/betsy/OneDrive/Desktop/Master's Degree/BSBC Data.csv\")\n View(BSBC.Data)\n \n df_long1 &lt;- BSBC.Data %&gt;%\n   select(Region,BF.2018,BF.2020,BF.2022) %&gt;%\n   pivot_longer(cols = c(BF.2018,BF.2020,BF.2022),\n                names_to = \"Year\",\n                values_to = \"BF\",\n                names_prefix = \"BF.\")\n\ndf_long &lt;- BSBC.Data %&gt;%\n  rename(BF.at.6.months.2022=BF.at.6.months..2022) %&gt;%\n  select(State,BF.at.6.months.2018, BF.at.6.months.2020, BF.at.6.months.2022) %&gt;%\n  pivot_longer(\n    cols = c(BF.at.6.months.2018, BF.at.6.months.2020, BF.at.6.months.2022),  # Replace with your column names\n    names_to = \"year\",\n    values_to = \"BF\", \n    names_prefix = \"BF.at.6.months.\"\n  )"
  },
  {
    "objectID": "posts/MarksChannels/index.html#loading-library-and-necessary-data",
    "href": "posts/MarksChannels/index.html#loading-library-and-necessary-data",
    "title": "“ASSIGNMENT 4”",
    "section": "",
    "text": "Code\n##figure 1\nlibrary(tidyverse)\n\n\nWarning: package 'tidyverse' was built under R version 4.4.2\n\n\nWarning: package 'ggplot2' was built under R version 4.4.2\n\n\nWarning: package 'tidyr' was built under R version 4.4.2\n\n\nWarning: package 'readr' was built under R version 4.4.2\n\n\nWarning: package 'dplyr' was built under R version 4.4.2\n\n\nWarning: package 'forcats' was built under R version 4.4.2\n\n\nWarning: package 'lubridate' was built under R version 4.4.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nBSBC.Data &lt;- read.csv(\"C:/Users/betsy/OneDrive/Desktop/Master's Degree/BSBC Data.csv\")\n View(BSBC.Data)\n \n df_long1 &lt;- BSBC.Data %&gt;%\n   select(Region,BF.2018,BF.2020,BF.2022) %&gt;%\n   pivot_longer(cols = c(BF.2018,BF.2020,BF.2022),\n                names_to = \"Year\",\n                values_to = \"BF\",\n                names_prefix = \"BF.\")\n\ndf_long &lt;- BSBC.Data %&gt;%\n  rename(BF.at.6.months.2022=BF.at.6.months..2022) %&gt;%\n  select(State,BF.at.6.months.2018, BF.at.6.months.2020, BF.at.6.months.2022) %&gt;%\n  pivot_longer(\n    cols = c(BF.at.6.months.2018, BF.at.6.months.2020, BF.at.6.months.2022),  # Replace with your column names\n    names_to = \"year\",\n    values_to = \"BF\", \n    names_prefix = \"BF.at.6.months.\"\n  )"
  },
  {
    "objectID": "posts/MarksChannels/index.html#expressiveness-and-effectiveness",
    "href": "posts/MarksChannels/index.html#expressiveness-and-effectiveness",
    "title": "“ASSIGNMENT 4”",
    "section": "Expressiveness and Effectiveness",
    "text": "Expressiveness and Effectiveness\nFigure. 1\n\n\nCode\nggplot(df_long1, aes(x=Region,y=BF))+\n  geom_bar(stat = \"identity\", aes(fill=Region)) +\n  xlab(\"WIC Region\") +\n  ylab(\"BF Rate at 6 months (percent)\") +\n  ggtitle(\"BF rate by WIC Region\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 0.1),\n        legend.position = \"right\")+\n  facet_wrap(~Year)\n\n\nWarning: Removed 126 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nFigure 2. What needs to be expressed here is expressed; Rates of breastfeeding at 6 months by state and it adds in years… However, the effectiveness is horrible. There is way too much going on and it is hard to follow and determine what is what. It really needs to be separate graphs, or separated by region instead of state or something to make it more clear and concise.\n\n\nCode\nggplot(df_long, aes(x=State,y=BF))+\n  geom_bar(stat = \"identity\", aes(fill=State, alpha=year)) +\n  xlab(\"State\") +\n  ylab(\"BF Rate at 6 months (percent\") +\n  ggtitle(\"BF rate by state\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 0.1),\n        legend.position = \"right\")\n\n\nWarning: Using alpha for a discrete variable is not advised."
  },
  {
    "objectID": "posts/MarksChannels/index.html#discriminability",
    "href": "posts/MarksChannels/index.html#discriminability",
    "title": "“ASSIGNMENT 4”",
    "section": "Discriminability",
    "text": "Discriminability\nFigure 3. Box and Whisker allows you to see outliers more easily. It also is just an easy way to see values, and is just overall very clean and easy to discern.\n\n\nCode\nggplot(data=df_long, aes(y=BF, x=year)) +\n  geom_boxplot() + \n  theme_minimal() + \n  labs( title = \"Distribution of BF by Year\", x = \"Year\", y = \"BF Value\" )\n\n\n\n\n\n\n\n\n\nFigure 4. This is unnecessary addition of color that doesn’t really add to the discernability.\n\n\nCode\nggplot(data=df_long, aes(y=BF, x=year)) +\n  geom_boxplot(fill= c(\"red\", \"blue\", \"green\"))"
  },
  {
    "objectID": "posts/MarksChannels/index.html#seperability",
    "href": "posts/MarksChannels/index.html#seperability",
    "title": "“ASSIGNMENT 4”",
    "section": "Seperability",
    "text": "Seperability\nI feel like Figures 1 & 2 are good examples of this as well, so I am repeating them in this section:\n\n\nCode\nggplot(df_long1, aes(x=Region,y=BF))+\n  geom_bar(stat = \"identity\", aes(fill=Region)) +\n  xlab(\"WIC Region\") +\n  ylab(\"BF Rate at 6 months (percent)\") +\n  ggtitle(\"BF rate by WIC Region\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 0.1),\n        legend.position = \"right\")+\n  facet_wrap(~Year)\n\n\nWarning: Removed 126 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nCode\nggplot(df_long, aes(x=State,y=BF))+\n  geom_bar(stat = \"identity\", aes(fill=State, alpha=year)) +\n  xlab(\"State\") +\n  ylab(\"BF Rate at 6 months (percent\") +\n  ggtitle(\"BF rate by state\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 0.1),\n        legend.position = \"right\")\n\n\nWarning: Using alpha for a discrete variable is not advised.\n\n\n\n\n\n\n\n\n\n##PopOut\nI made it so that Alabama breastfeeding data from 2018 stood out as a red dot.\n\n\nCode\nr1&lt;-subset(BSBC.Data, State==\"Alabama\" )\nggplot(df_long1, aes(x=Year, y=BF))+\n  geom_point() +\n  theme_minimal()+\n   geom_point(data = r1, aes(x=State, y =BF.at.6.months.2018),\n             color = \"red\")\n\n\nWarning: Removed 126 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "posts/Assignment5/Assignment 5- Hockey Ballot.html",
    "href": "posts/Assignment5/Assignment 5- Hockey Ballot.html",
    "title": "Assignment 5- Hockey Ballot",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(dplyr)\nGoalies &lt;-read.csv(\"Goalies.csv\")\nRookieGoalies &lt;-read.csv(\"RookieGoalies.csv\")\nRookieSkaterIndividual &lt;-read.csv(\"RookieSkaterIndividual.csv\")\nRookieSkaterOnIce &lt;- read.csv(\"RookieSkaterOnIce.csv\")\nSkaterIndividualstats &lt;-read.csv(\"SkaterIndividualstats.csv\")\nSkaterOnIcestats &lt;- read.csv(\"SkaterOnIcestats.csv\")\n#RSUCKS &lt;- read.csv(\"R_sucks.csv\")\n\n\n\n\n\nAwarded to the “player judged most valuable to his team.” This isn’t necessarily the best overall player, but rather the one who contributes most significantly to his team’s success.\n\n\nCode\nplayers_data &lt;- data.frame(SkaterOnIcestats)\n  Player = c(\"Player\")\n  CF. = c(\"CF.\")\n  \nplayers_data2 &lt;-SkaterOnIcestats %&gt;%\n  select (Player, CF.) \n\nfiltered_data &lt;- players_data2 %&gt;%\n  dplyr::filter(CF. &gt;= 65)\n\n\n\n\nHart&lt;-ggplot(data=filtered_data, aes(x=CF., y= reorder(Player, CF.))) +\n  geom_bar(stat=\"identity\") +\n  xlab(\"CF Percent\")+\n  ylab(\"Player Name\")\n\nprint(Hart)\n\n\n\n\n\n\n\n\n\nBased on the data here, with higher CF% meaning a more positive contribution to the team while on the ice, I would vote the following:\n1.Samuel Buldoc\n2.Nathan Clurman\n3.Justin Sourdif\n4.Shayne Gostisbehere\n5.Rasmus Asblund\n\n\n\nPresented to the goaltender “adjudged to be the best at this position.” NHL general managers vote on this award.\n\n\nCode\nvezina_trophy &lt;-data_frame(Goalies)\n\n\nWarning: `data_frame()` was deprecated in tibble 1.1.0.\nℹ Please use `tibble()` instead.\n\n\nCode\n Player = c(\"Player\")\n  SV = c(\"SV.\")\n  \nvez_data &lt;-Goalies %&gt;%\n  select (Player, SV.) \n\nfiltered_vez &lt;-vez_data %&gt;%\n  dplyr::filter(SV. &gt;=0.90)\n\n  \nggplot(data=filtered_vez, aes(x=SV., y= reorder(Player, SV.))) +\n  geom_bar(stat=\"identity\") +\n  xlab(\"SV\")+\n  ylab(\"Player Name\")\n\n\n\n\n\n\n\n\n\nThis is great… But potentially misleading… Let’s dig a bit deeper because who catches things 100% of the time? We want to know who has played the most games. So we are going to filter it to an arbitrary number of 45. This leaves us with 5 players.. Perfect! From there, let’s look back at SV% with just those 5…\n\n\nCode\nvez_data1 &lt;- data.frame(Goalies) %&gt;%\n   filter(GP &gt;=45) %&gt;%\n   select(Player, SV.)\n\n\nggplot(data=vez_data1, aes(x=SV., y= reorder(Player, SV.)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nBased on the SV% of these five players I am casting my ballot as follows:\n\nConnor Hellebuyck\nAndrei Vasilevskiy\nIlya Sorokin\nSam Montembeault\nJuuse Saros\n\n\n\n\nAwarded to the defenseman who demonstrates “the greatest all-around ability” at the position.\n\n\nCode\nJN_trophy &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Position == \"D\") %&gt;%\n  filter(Shots.Blocked &gt;=125) %&gt;%\n  select(Player, Shots.Blocked)\n\nggplot(data=JN_trophy, aes(x=Shots.Blocked, y= reorder(Player, Shots.Blocked)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nThis shows how many shots the individual blocked. Let’s take a look at another aspect of defense and see if there are any overlaps!\n\n\nCode\nJN_trophy1 &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Position == \"D\") %&gt;%\n  filter(Takeaways &gt;= 40) %&gt;%\n  select(Player,Takeaways)\n\n  ggplot(data=JN_trophy1, aes(x=Takeaways, y= reorder(Player, Takeaways)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nHmm… There is only 1 name that overlaps and that is Jake Sanderson. So I will put him at the top of my list… I then have to decide what is more important; blocks or takeaways…. I can’t choose so I am going to sprinkle in both and vote the following:\n\nJake Sanderson\nIan Cole\nJaccob Slavin\nJacob Trouba\nCale Makar\n\n\n\n\nGiven to the player “adjudged to be the most proficient in his first year of competition.” This is essentially the rookie of the year award.\n\n\nCode\nCM_Trophy &lt;-data.frame(RookieSkaterOnIce) %&gt;%\n  filter(CF. &gt;=60) %&gt;%\n  select(Player,CF.)\n\nggplot(data=CM_Trophy, aes(x=CF., y= reorder(Player, CF.)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nOnce again, I’m using CF% as my metric. Based on that, I would cast my ballot as follows:\n\nNathan Clurman\nSamuel Bolduc\nAngus Crookshank\nRyan Suzuki\nAlex Laferriere\n\n\n\n\nAwarded to the forward who best excels in the defensive aspects of the game.\nI read that there are 3 forward positions: Center, Left wing and Right wing. I am going to look at Center position first. I am choosing to base the defensive aspect on blocking shots.\n\n\nCode\nFJS_Trophy_Center &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Position == \"C\") %&gt;%\n  filter(Shots.Blocked &gt;= 60) %&gt;%\n  select(Player, Shots.Blocked)\n\nggplot(data=FJS_Trophy_Center, aes(x=Shots.Blocked, y= reorder(Player, Shots.Blocked)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nI am now going to look at the Left wing\n\n\nCode\nFJS_Trophy_Left &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Position == \"L\") %&gt;%\n  filter(Shots.Blocked &gt;= 60) %&gt;%\n  select(Player, Shots.Blocked)\n\nggplot(data=FJS_Trophy_Left, aes(x=Shots.Blocked, y= reorder(Player, Shots.Blocked)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nNow I am looking at Right wing\n\n\nCode\nFJS_Trophy_Right &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Position == \"R\") %&gt;%\n  filter(Shots.Blocked &gt;= 60) %&gt;%\n  select(Player, Shots.Blocked)\n\nggplot(data=FJS_Trophy_Right, aes(x=Shots.Blocked, y= reorder(Player, Shots.Blocked)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nAfter looking at all of the forward positions and seeing who blocked greater than 60 shots I would cast my ballot as follows:\n\nBrandon Tanev\nAlex Tuch\nNoel Acciari\nVincent Trocheck\nRickard Rakell\n\n\n\n\nPresented to the player who exhibits “the best type of sportsmanship and gentlemanly conduct combined with a high standard of playing ability.”\nFor this one, I plan to find the players with the lowest number of penalties, no misconduct, and the most points\n\n\nCode\nLBM_trophy &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Total.Penalties &lt;= \"10\") %&gt;%\n  filter (Misconduct ==0) %&gt;%\n  filter (Total.Points &gt;= 45) %&gt;%\n  select(Player, Total.Points)\n\nggplot(data=LBM_trophy, aes(x=Total.Points, y= reorder(Player, Total.Points)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nBased on this criteria, I cast my ballot as follows:\n\nKyle Connor\nSidney Crosby\nBrayden Point\nAnze Kopitar\nShea Theodore"
  },
  {
    "objectID": "posts/Assignment5/Assignment 5- Hockey Ballot.html#load-library-and-environments",
    "href": "posts/Assignment5/Assignment 5- Hockey Ballot.html#load-library-and-environments",
    "title": "Assignment 5- Hockey Ballot",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(dplyr)\nGoalies &lt;-read.csv(\"Goalies.csv\")\nRookieGoalies &lt;-read.csv(\"RookieGoalies.csv\")\nRookieSkaterIndividual &lt;-read.csv(\"RookieSkaterIndividual.csv\")\nRookieSkaterOnIce &lt;- read.csv(\"RookieSkaterOnIce.csv\")\nSkaterIndividualstats &lt;-read.csv(\"SkaterIndividualstats.csv\")\nSkaterOnIcestats &lt;- read.csv(\"SkaterOnIcestats.csv\")\n#RSUCKS &lt;- read.csv(\"R_sucks.csv\")"
  },
  {
    "objectID": "posts/Assignment5/Assignment 5- Hockey Ballot.html#hart-memorial-trophy",
    "href": "posts/Assignment5/Assignment 5- Hockey Ballot.html#hart-memorial-trophy",
    "title": "Assignment 5- Hockey Ballot",
    "section": "",
    "text": "Awarded to the “player judged most valuable to his team.” This isn’t necessarily the best overall player, but rather the one who contributes most significantly to his team’s success.\n\n\nCode\nplayers_data &lt;- data.frame(SkaterOnIcestats)\n  Player = c(\"Player\")\n  CF. = c(\"CF.\")\n  \nplayers_data2 &lt;-SkaterOnIcestats %&gt;%\n  select (Player, CF.) \n\nfiltered_data &lt;- players_data2 %&gt;%\n  dplyr::filter(CF. &gt;= 65)\n\n\n\n\nHart&lt;-ggplot(data=filtered_data, aes(x=CF., y= reorder(Player, CF.))) +\n  geom_bar(stat=\"identity\") +\n  xlab(\"CF Percent\")+\n  ylab(\"Player Name\")\n\nprint(Hart)\n\n\n\n\n\n\n\n\n\nBased on the data here, with higher CF% meaning a more positive contribution to the team while on the ice, I would vote the following:\n1.Samuel Buldoc\n2.Nathan Clurman\n3.Justin Sourdif\n4.Shayne Gostisbehere\n5.Rasmus Asblund"
  },
  {
    "objectID": "posts/Assignment5/Assignment 5- Hockey Ballot.html#vezina-trophy",
    "href": "posts/Assignment5/Assignment 5- Hockey Ballot.html#vezina-trophy",
    "title": "Assignment 5- Hockey Ballot",
    "section": "",
    "text": "Presented to the goaltender “adjudged to be the best at this position.” NHL general managers vote on this award.\n\n\nCode\nvezina_trophy &lt;-data_frame(Goalies)\n\n\nWarning: `data_frame()` was deprecated in tibble 1.1.0.\nℹ Please use `tibble()` instead.\n\n\nCode\n Player = c(\"Player\")\n  SV = c(\"SV.\")\n  \nvez_data &lt;-Goalies %&gt;%\n  select (Player, SV.) \n\nfiltered_vez &lt;-vez_data %&gt;%\n  dplyr::filter(SV. &gt;=0.90)\n\n  \nggplot(data=filtered_vez, aes(x=SV., y= reorder(Player, SV.))) +\n  geom_bar(stat=\"identity\") +\n  xlab(\"SV\")+\n  ylab(\"Player Name\")\n\n\n\n\n\n\n\n\n\nThis is great… But potentially misleading… Let’s dig a bit deeper because who catches things 100% of the time? We want to know who has played the most games. So we are going to filter it to an arbitrary number of 45. This leaves us with 5 players.. Perfect! From there, let’s look back at SV% with just those 5…\n\n\nCode\nvez_data1 &lt;- data.frame(Goalies) %&gt;%\n   filter(GP &gt;=45) %&gt;%\n   select(Player, SV.)\n\n\nggplot(data=vez_data1, aes(x=SV., y= reorder(Player, SV.)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nBased on the SV% of these five players I am casting my ballot as follows:\n\nConnor Hellebuyck\nAndrei Vasilevskiy\nIlya Sorokin\nSam Montembeault\nJuuse Saros"
  },
  {
    "objectID": "posts/Assignment5/Assignment 5- Hockey Ballot.html#james-norris-memorial-trophy",
    "href": "posts/Assignment5/Assignment 5- Hockey Ballot.html#james-norris-memorial-trophy",
    "title": "Assignment 5- Hockey Ballot",
    "section": "",
    "text": "Awarded to the defenseman who demonstrates “the greatest all-around ability” at the position.\n\n\nCode\nJN_trophy &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Position == \"D\") %&gt;%\n  filter(Shots.Blocked &gt;=125) %&gt;%\n  select(Player, Shots.Blocked)\n\nggplot(data=JN_trophy, aes(x=Shots.Blocked, y= reorder(Player, Shots.Blocked)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nThis shows how many shots the individual blocked. Let’s take a look at another aspect of defense and see if there are any overlaps!\n\n\nCode\nJN_trophy1 &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Position == \"D\") %&gt;%\n  filter(Takeaways &gt;= 40) %&gt;%\n  select(Player,Takeaways)\n\n  ggplot(data=JN_trophy1, aes(x=Takeaways, y= reorder(Player, Takeaways)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nHmm… There is only 1 name that overlaps and that is Jake Sanderson. So I will put him at the top of my list… I then have to decide what is more important; blocks or takeaways…. I can’t choose so I am going to sprinkle in both and vote the following:\n\nJake Sanderson\nIan Cole\nJaccob Slavin\nJacob Trouba\nCale Makar"
  },
  {
    "objectID": "posts/Assignment5/Assignment 5- Hockey Ballot.html#calder-memorial-trophy",
    "href": "posts/Assignment5/Assignment 5- Hockey Ballot.html#calder-memorial-trophy",
    "title": "Assignment 5- Hockey Ballot",
    "section": "",
    "text": "Given to the player “adjudged to be the most proficient in his first year of competition.” This is essentially the rookie of the year award.\n\n\nCode\nCM_Trophy &lt;-data.frame(RookieSkaterOnIce) %&gt;%\n  filter(CF. &gt;=60) %&gt;%\n  select(Player,CF.)\n\nggplot(data=CM_Trophy, aes(x=CF., y= reorder(Player, CF.)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nOnce again, I’m using CF% as my metric. Based on that, I would cast my ballot as follows:\n\nNathan Clurman\nSamuel Bolduc\nAngus Crookshank\nRyan Suzuki\nAlex Laferriere"
  },
  {
    "objectID": "posts/Assignment5/Assignment 5- Hockey Ballot.html#frank-j-selke-memorial-trophy",
    "href": "posts/Assignment5/Assignment 5- Hockey Ballot.html#frank-j-selke-memorial-trophy",
    "title": "Assignment 5- Hockey Ballot",
    "section": "",
    "text": "Awarded to the forward who best excels in the defensive aspects of the game.\nI read that there are 3 forward positions: Center, Left wing and Right wing. I am going to look at Center position first. I am choosing to base the defensive aspect on blocking shots.\n\n\nCode\nFJS_Trophy_Center &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Position == \"C\") %&gt;%\n  filter(Shots.Blocked &gt;= 60) %&gt;%\n  select(Player, Shots.Blocked)\n\nggplot(data=FJS_Trophy_Center, aes(x=Shots.Blocked, y= reorder(Player, Shots.Blocked)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nI am now going to look at the Left wing\n\n\nCode\nFJS_Trophy_Left &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Position == \"L\") %&gt;%\n  filter(Shots.Blocked &gt;= 60) %&gt;%\n  select(Player, Shots.Blocked)\n\nggplot(data=FJS_Trophy_Left, aes(x=Shots.Blocked, y= reorder(Player, Shots.Blocked)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nNow I am looking at Right wing\n\n\nCode\nFJS_Trophy_Right &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Position == \"R\") %&gt;%\n  filter(Shots.Blocked &gt;= 60) %&gt;%\n  select(Player, Shots.Blocked)\n\nggplot(data=FJS_Trophy_Right, aes(x=Shots.Blocked, y= reorder(Player, Shots.Blocked)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nAfter looking at all of the forward positions and seeing who blocked greater than 60 shots I would cast my ballot as follows:\n\nBrandon Tanev\nAlex Tuch\nNoel Acciari\nVincent Trocheck\nRickard Rakell"
  },
  {
    "objectID": "posts/Assignment5/Assignment 5- Hockey Ballot.html#lady-byng-memorial-trophy",
    "href": "posts/Assignment5/Assignment 5- Hockey Ballot.html#lady-byng-memorial-trophy",
    "title": "Assignment 5- Hockey Ballot",
    "section": "",
    "text": "Presented to the player who exhibits “the best type of sportsmanship and gentlemanly conduct combined with a high standard of playing ability.”\nFor this one, I plan to find the players with the lowest number of penalties, no misconduct, and the most points\n\n\nCode\nLBM_trophy &lt;-data.frame(SkaterIndividualstats) %&gt;%\n  filter(Total.Penalties &lt;= \"10\") %&gt;%\n  filter (Misconduct ==0) %&gt;%\n  filter (Total.Points &gt;= 45) %&gt;%\n  select(Player, Total.Points)\n\nggplot(data=LBM_trophy, aes(x=Total.Points, y= reorder(Player, Total.Points)))+\ngeom_col()\n\n\n\n\n\n\n\n\n\nBased on this criteria, I cast my ballot as follows:\n\nKyle Connor\nSidney Crosby\nBrayden Point\nAnze Kopitar\nShea Theodore"
  },
  {
    "objectID": "posts/Assignment-3/Assignment3.html",
    "href": "posts/Assignment-3/Assignment3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "Code\n BSBC.Data..BF.and.mPINC.over.3.reports &lt;- read.csv(\"C:/Users/betsy/OneDrive/Desktop/Master's Degree/BSBC Data. BF and mPINC over 3 reports.csv\")\n   View(BSBC.Data..BF.and.mPINC.over.3.reports)\nlibrary(tidyverse)\n\n\nWarning: package 'tidyverse' was built under R version 4.4.2\n\n\nWarning: package 'ggplot2' was built under R version 4.4.2\n\n\nWarning: package 'tidyr' was built under R version 4.4.2\n\n\nWarning: package 'readr' was built under R version 4.4.2\n\n\nWarning: package 'dplyr' was built under R version 4.4.2\n\n\nWarning: package 'forcats' was built under R version 4.4.2\n\n\nWarning: package 'lubridate' was built under R version 4.4.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\n View(BSBC.Data..BF.and.mPINC.over.3.reports)\n BF2022 &lt;- BSBC.Data..BF.and.mPINC.over.3.reports$BF.at.6.months..2022\n BF2020 &lt;- BSBC.Data..BF.and.mPINC.over.3.reports$BF.at.6.months.2020\n BF2018 &lt;- BSBC.Data..BF.and.mPINC.over.3.reports$BF.at.6.months.2018\n mPINC2022 &lt;-BSBC.Data..BF.and.mPINC.over.3.reports$mPINC..2022\n mPINC2020 &lt;-BSBC.Data..BF.and.mPINC.over.3.reports$mPINC.at.2020\n mPINC2018 &lt;-BSBC.Data..BF.and.mPINC.over.3.reports$mPINC.2018\n\n\n\n\nCode\n# Assuming your data frame is called 'df'\ndf_long &lt;- BSBC.Data..BF.and.mPINC.over.3.reports %&gt;%\n  rename(BF.at.6.months.2022=BF.at.6.months..2022) %&gt;%\n  select(State,BF.at.6.months.2018, BF.at.6.months.2020, BF.at.6.months.2022) %&gt;%\n  pivot_longer(\n    cols = c(BF.at.6.months.2018, BF.at.6.months.2020, BF.at.6.months.2022),  # Replace with your column names\n    names_to = \"year\",\n    values_to = \"BF\", \n    names_prefix = \"BF.at.6.months.\"\n  )\n\n\n\nggplot(data=df_long, aes(y=BF, x=year)) +\n  geom_boxplot() + \n  theme_minimal() + \n  labs( title = \"Distribution of BF by Year\", x = \"Year\", y = \"BF Value\" )\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_long2 &lt;- BSBC.Data..BF.and.mPINC.over.3.reports %&gt;%\n  rename(mPINC.2022=mPINC..2022,\n         mPINC.2020=mPINC.at.2020) %&gt;%\n  select(State,mPINC.2018, mPINC.2020, mPINC.2022) %&gt;%\n  pivot_longer(\n    cols = c(mPINC.2018, mPINC.2020, mPINC.2022),  # Replace with your column names\n    names_to = \"year\",\n    values_to = \"mPINC\", \n    names_prefix = \"mPINC.\"\n  )\n\nggplot(data=df_long2, aes(y=mPINC, x=year)) +\n  geom_boxplot()"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Welcome!\nI hope you’re having a great day!"
  },
  {
    "objectID": "posts/Data-Set-Assignment-2/Assignment 2.html",
    "href": "posts/Data-Set-Assignment-2/Assignment 2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Code\n BSBC.Data &lt;- read.csv(\"C:/Users/betsy/OneDrive/Desktop/Master's Degree/BSBC Data.csv\")\n   View(BSBC.Data)"
  },
  {
    "objectID": "posts/Data-Set-Assignment-2/Assignment 2.html#import-data-set",
    "href": "posts/Data-Set-Assignment-2/Assignment 2.html#import-data-set",
    "title": "Assignment 2",
    "section": "",
    "text": "Code\n BSBC.Data &lt;- read.csv(\"C:/Users/betsy/OneDrive/Desktop/Master's Degree/BSBC Data.csv\")\n   View(BSBC.Data)"
  },
  {
    "objectID": "posts/Data-Set-Assignment-2/Assignment 2.html#description-of-data-set",
    "href": "posts/Data-Set-Assignment-2/Assignment 2.html#description-of-data-set",
    "title": "Assignment 2",
    "section": "Description of Data Set",
    "text": "Description of Data Set\nThis data set is tabular data and the attribute is categorical/quantitative. The data includes the breastfeeding rates (in %) of each state and the mPINC scores (algorithmic data) of each state. I have also included the breastfeeding rates of the different regions, based off of WIC regions. These all are from the year 2018,2020, and 2022."
  },
  {
    "objectID": "posts/Anscomb-Quartet/Assignment 1.html",
    "href": "posts/Anscomb-Quartet/Assignment 1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "Code\nlibrary(ggplot2)\n\n\nWarning: package 'ggplot2' was built under R version 4.4.2\n\n\nCode\nlibrary(grid)\nlibrary(gridExtra)\n\n\nWarning: package 'gridExtra' was built under R version 4.4.2\n\n\nCode\nlibrary(datasets)\nlibrary(tidyverse)\n\n\nWarning: package 'tidyverse' was built under R version 4.4.2\n\n\nWarning: package 'tidyr' was built under R version 4.4.2\n\n\nWarning: package 'readr' was built under R version 4.4.2\n\n\nWarning: package 'dplyr' was built under R version 4.4.2\n\n\nWarning: package 'forcats' was built under R version 4.4.2\n\n\nWarning: package 'lubridate' was built under R version 4.4.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::combine() masks gridExtra::combine()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(dplyr)\ndatasets::anscombe\n\n\n   x1 x2 x3 x4    y1   y2    y3    y4\n1  10 10 10  8  8.04 9.14  7.46  6.58\n2   8  8  8  8  6.95 8.14  6.77  5.76\n3  13 13 13  8  7.58 8.74 12.74  7.71\n4   9  9  9  8  8.81 8.77  7.11  8.84\n5  11 11 11  8  8.33 9.26  7.81  8.47\n6  14 14 14  8  9.96 8.10  8.84  7.04\n7   6  6  6  8  7.24 6.13  6.08  5.25\n8   4  4  4 19  4.26 3.10  5.39 12.50\n9  12 12 12  8 10.84 9.13  8.15  5.56\n10  7  7  7  8  4.82 7.26  6.42  7.91\n11  5  5  5  8  5.68 4.74  5.73  6.89"
  },
  {
    "objectID": "posts/Anscomb-Quartet/Assignment 1.html#anscombe-quartet--library-choices",
    "href": "posts/Anscomb-Quartet/Assignment 1.html#anscombe-quartet--library-choices",
    "title": "Assignment 1",
    "section": "",
    "text": "Code\nlibrary(ggplot2)\n\n\nWarning: package 'ggplot2' was built under R version 4.4.2\n\n\nCode\nlibrary(grid)\nlibrary(gridExtra)\n\n\nWarning: package 'gridExtra' was built under R version 4.4.2\n\n\nCode\nlibrary(datasets)\nlibrary(tidyverse)\n\n\nWarning: package 'tidyverse' was built under R version 4.4.2\n\n\nWarning: package 'tidyr' was built under R version 4.4.2\n\n\nWarning: package 'readr' was built under R version 4.4.2\n\n\nWarning: package 'dplyr' was built under R version 4.4.2\n\n\nWarning: package 'forcats' was built under R version 4.4.2\n\n\nWarning: package 'lubridate' was built under R version 4.4.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::combine() masks gridExtra::combine()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(dplyr)\ndatasets::anscombe\n\n\n   x1 x2 x3 x4    y1   y2    y3    y4\n1  10 10 10  8  8.04 9.14  7.46  6.58\n2   8  8  8  8  6.95 8.14  6.77  5.76\n3  13 13 13  8  7.58 8.74 12.74  7.71\n4   9  9  9  8  8.81 8.77  7.11  8.84\n5  11 11 11  8  8.33 9.26  7.81  8.47\n6  14 14 14  8  9.96 8.10  8.84  7.04\n7   6  6  6  8  7.24 6.13  6.08  5.25\n8   4  4  4 19  4.26 3.10  5.39 12.50\n9  12 12 12  8 10.84 9.13  8.15  5.56\n10  7  7  7  8  4.82 7.26  6.42  7.91\n11  5  5  5  8  5.68 4.74  5.73  6.89"
  },
  {
    "objectID": "posts/Anscomb-Quartet/Assignment 1.html#tidied-up",
    "href": "posts/Anscomb-Quartet/Assignment 1.html#tidied-up",
    "title": "Assignment 1",
    "section": "Tidied up",
    "text": "Tidied up\n\n\nCode\ntidy_anscombe &lt;- anscombe %&gt;%\n pivot_longer(cols = everything(),\n              names_to = c(\".value\", \"set\"),\n              names_pattern = \"(.)(.)\")\ntidy_anscombe_summary &lt;- tidy_anscombe %&gt;%\n  group_by(set) %&gt;%\n  summarise(across(.cols = everything(),\n                   .fns = lst(min,max,median,mean,sd,var),\n                   .names = \"{col}_{fn}\"))\n#&gt; `summarise()` ungrouping output (override with `.groups` argument)\n\nvars&lt;-c(\"set\", \"x_mean\", \"x_var\",  \"y_mean\", \"y_var\")\nthing&lt;- as.data.frame(tidy_anscombe_summary[vars])\nknitr::kable(thing)\n\n\n\n\n\nset\nx_mean\nx_var\ny_mean\ny_var\n\n\n\n\n1\n9\n11\n7.500909\n4.127269\n\n\n2\n9\n11\n7.500909\n4.127629\n\n\n3\n9\n11\n7.500000\n4.122620\n\n\n4\n9\n11\n7.500909\n4.123249"
  },
  {
    "objectID": "posts/Anscomb-Quartet/Assignment 1.html#why-visualization-matters",
    "href": "posts/Anscomb-Quartet/Assignment 1.html#why-visualization-matters",
    "title": "Assignment 1",
    "section": "Why Visualization Matters",
    "text": "Why Visualization Matters\n\n\nCode\nggplot(tidy_anscombe,\n       aes(x = x,\n           y = y)) +\n  geom_point() +\n  geom_point(data = tidy_anscombe_summary, aes(x=x_mean, y = y_mean, color = \"red\", size = 5),\n             show.legend = FALSE)+\n  facet_wrap(~set) +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BCB504Portfolio",
    "section": "",
    "text": "Data Visualization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment 3\n\n\n\n\n\n\nAssignment\n\n\nDataViz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment 2\n\n\n\n\n\n\nAssignment\n\n\nDataViz\n\n\n\n\n\n\n\n\n\nBetsy Church\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment 5- Hockey Ballot\n\n\n\n\n\n\nAssignment\n\n\nDataViz\n\n\n\n\n\n\n\n\n\nBetsy Church\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment 1\n\n\n\n\n\n\nAssignment\n\n\nDataViz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n“ASSIGNMENT 4”\n\n\n“Marks and Channels”\n\n\n\nAssignment\n\n\nDataViz\n\n\n\n“Marks and Channels doing their thing and… Not doing it well sometimes.”\n\n\n\n\n\nBetsy Church\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nFeb 9, 2025\n\n\nBetsy Church\n\n\n\n\n\n\nNo matching items"
  }
]