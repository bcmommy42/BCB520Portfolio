{
  "hash": "1d2fd7b7fa6dc4fd117fb70a2b03891d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Network_Data\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the data frame\ndata <- data.frame(\n  name = c(\"Betsy\", \"Claire\", \"Barrie\", \"Henry\", \"Ian\", \"John\", \"Kyle\", \"Marwa\", \"Priya\", \"Justice\", \"Sharon\"),\n  microbiology = c(1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0),\n  crochet = c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1),\n  BehavioralEcology = c(0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0),\n  ListeningToMusic = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1),\n  BeefFabrication = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0),\n  Gardening = c(1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0),\n  AI = c(0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1),\n  StainedGlass = c(0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0),\n  Entomology = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),\n  Terrariums = c(0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0),\n  MATLAB = c(0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0),\n  Architecture = c(0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0),\n  DataScience = c(1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1),\n  Pinball = c(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0),\n  PublicAdministration = c(0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1),\n  Lifting = c(0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0),\n  Genomics = c(1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0),\n  Movies = c(1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1),\n  Mathematica = c(0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1),\n  Driving = c(1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1),\n  MassSpec = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1),\n  Hiking = c(0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1)\n)\n\n# Remove the name column for the adjacency matrix\nadj_matrix <- as.matrix(data[, -1])\n\n# Print the adjacency matrix\nprint(adj_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      microbiology crochet BehavioralEcology ListeningToMusic BeefFabrication\n [1,]            1       1                 0                1               0\n [2,]            1       1                 0                1               1\n [3,]            0       0                 1                1               0\n [4,]            1       0                 1                1               0\n [5,]            0       0                 0                1               0\n [6,]            0       0                 0                1               0\n [7,]            0       0                 1                1               0\n [8,]            0       0                 0                1               0\n [9,]            0       0                 0                1               0\n[10,]            0       0                 1                0               1\n[11,]            0       1                 0                1               0\n      Gardening AI StainedGlass Entomology Terrariums MATLAB Architecture\n [1,]         1  0            0          0          0      0            0\n [2,]         1  1            0          0          0      0            0\n [3,]         1  1            0          0          0      0            0\n [4,]         1  1            1          0          1      0            1\n [5,]         1  0            0          0          0      1            0\n [6,]         0  1            0          0          0      0            0\n [7,]         0  1            0          0          1      0            0\n [8,]         1  0            0          0          0      1            1\n [9,]         1  0            1          0          0      0            0\n[10,]         1  0            0          0          0      0            1\n[11,]         0  1            0          0          0      0            0\n      DataScience Pinball PublicAdministration Lifting Genomics Movies\n [1,]           1       0                    0       0        1      1\n [2,]           0       0                    0       1        0      1\n [3,]           1       0                    0       0        1      1\n [4,]           0       0                    1       1        1      1\n [5,]           1       0                    1       0        0      0\n [6,]           1       0                    0       0        0      1\n [7,]           1       0                    1       0        0      1\n [8,]           0       1                    1       0        0      1\n [9,]           1       0                    0       1        0      1\n[10,]           0       0                    0       0        1      1\n[11,]           1       0                    1       0        0      1\n      Mathematica Driving MassSpec Hiking\n [1,]           0       1        0      0\n [2,]           0       0        0      1\n [3,]           0       0        0      0\n [4,]           0       0        0      1\n [5,]           1       1        0      0\n [6,]           1       0        0      0\n [7,]           0       1        0      1\n [8,]           0       0        0      1\n [9,]           0       0        0      1\n[10,]           1       0        0      1\n[11,]           1       1        1      1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set a CRAN mirror\nchooseCRANmirror(graphics = FALSE, ind = 1) # This sets the first CRAN mirror from the list\n\ninstall.packages(\"igraph\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npackage 'igraph' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\betsy\\AppData\\Local\\Temp\\Rtmp0Gi3ho\\downloaded_packages\n```\n\n\n:::\n\n```{.r .cell-code}\n# Load the necessary library\nlibrary(ggplot2)\n\n# Define the edges based on the provided data\nedges <- data.frame(\n  from = c(\"Betsy\", \"Claire\", \"Henry\", \"Ian\", \"John\", \"Justice\", \"Kyle\", \"Marwa\", \"Priya\", \"Sharon\"),\n  to = c(\"Shelley\", \"Phil\", \"Armando\", \"Ching-An\", \"Terence\", \"Nuismer\", \"Simona\", \"Manoj\", \"Adam\", \"Shelley\"),\n  connected = c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE)\n)\n\n# Extract unique nodes\nnodes <- unique(c(edges$from, edges$to))\n\n# Assign positions for plotting (e.g., in a circle for simplicity)\nangles <- seq(0, 2*pi, length.out = length(nodes) + 1)\nnode_positions <- data.frame(\n  name = nodes,\n  x = cos(angles[-length(angles)]),\n  y = sin(angles[-length(angles)])\n)\n\n# Merge node positions with edge data\nedges <- merge(edges, node_positions, by.x = \"from\", by.y = \"name\", suffixes = c(\".from\", \".to\"))\nedges <- merge(edges, node_positions, by.x = \"to\", by.y = \"name\", suffixes = c(\".to\", \".from\"))\n\n# Create the plot\np <- ggplot() +\n  # Add edges\n  geom_segment(data = edges, aes(x = x.from, y = y.from, xend = x.to, yend = y.to), color = \"grey\") +\n  # Add nodes\n  geom_point(data = node_positions, aes(x = x, y = y), size = 5, color = \"blue\") +\n  # Add labels\n  geom_text(data = node_positions, aes(x = x, y = y, label = name), vjust = -1, size = 3) +\n  theme_minimal() +\n  labs(title = \"Not Fancy Line-Node Plot Connecting Students and Advisors\", x = \"\", y = \"\")\n\n# Print the plot\nprint(p)\n```\n\n::: {.cell-output-display}\n![](Network_Data_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Load necessary libraries\n# Load necessary libraries\n# Load necessary libraries\n# Load necessary libraries\nlibrary(igraph)\nlibrary(ggraph)\nlibrary(dplyr)\n\n# Create the data frame with unique names, including Sharon\ndata <- data.frame(\n  name = c(\"Betsy\", \"Claire\", \"Henry\", \"Ian\", \"John\", \n           \"Kyle\", \"Lucas\", \"Marwa\", \"Priya\", \"Sharon\", \"Justice\",\"Adam\", \"Armando\", \"Barrie\",\"Manoj\", \"Phil\", \"Scott\", \"Shelley1\", \"Shelley2\", \n           \"Simona\", \"Terence\"),\n  department = c(\"FCS\", \"AVFS\", \"EPPN\", \"Engineering\", \n                 \"Computer Science\", \"CNR\", \"EPPN\", \"Politics and Philosophy\", \n                 \"Biology\", \"FCS\", \"Biology\", \"Biology\", \"EPPN\", \"Biology\", \n                 \"Politics and Philosophy\", \"AVFS\", \"Biology\", \"FCS\", \"FCS\", \"CNR\", \"Computer Science\"),\n  rank = c(\"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \n           \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \n           \"Professor\", \"Professor\", \"Professor\", \"Professor\", \n           \"Professor\", \"Professor\", \"Professor\", \"Professor\", \"Professor\", \"Professor\")\n)\n\n# Create edges by connecting nodes in the same department\nedges <- expand.grid(from = data$name, to = data$name) %>%\n  left_join(data, by = c(\"from\" = \"name\")) %>%\n  left_join(data, by = c(\"to\" = \"name\"), suffix = c(\".from\", \".to\")) %>%\n  filter(department.from == department.to, from != to)\n\n# Create a graph object\ngraph <- graph_from_data_frame(edges, vertices = data, directed = FALSE)\n\n# Plot with ggraph\nggraph(graph, layout = \"fr\") +  # 'fr' is a force-directed layout\n  geom_edge_link(aes(color = rank.from), size = 1) +\n  geom_node_point(aes(color = department), size = 5) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 3) +\n  scale_edge_color_manual(values = c(\"Graduate\" = \"grey\", \"Professor\" = \"red\")) +\n  scale_color_brewer(palette = \"Set3\") +\n  theme_minimal() +\n  labs(title = \"Line-Node Plot by Department and Rank\")\n```\n\n::: {.cell-output-display}\n![](Network_Data_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(igraph)\nlibrary(ggraph)\n\n# Create the data frame\nadvisor_data <- data.frame(\n  from = c(\"Geraline\", \"Lucas\", \"Heidi\", \"Yaotian\", \"Ian\", \"Betsy\", \"Sharon\", \n           \"Priya\", \"Claire\", \"Marwa\", \"Justice\", \"John\", \"Kyle\", \"Henry\"),\n  to = c(\"Scott\", \"Ed\", \"Yimin\", \"Jian\", \"Ching-An\", \"Shelley\", \"Shelley\", \n         \"Adam\", \"Phil\", \"Manoj\", \"Nuismer\", \"Terence\", \"Simona\", \"Armando\"),\n  Advisor = c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE)\n)\n\n# Create graph object from the data frame\ngraph <- graph_from_data_frame(advisor_data, directed = TRUE)\n\n# Plot with ggraph\nggraph(graph, layout = 'tree') + \n  geom_edge_link(arrow = arrow(length = unit(4, 'mm')), end_cap = circle(3, 'mm')) +\n  geom_node_point(size = 5) +\n  geom_node_text(aes(label = name), vjust = -0.5, hjust = 1, size = 3) +\n  theme_minimal() +\n  labs(title = \"Hierarchical Tree of Advisors\")\n```\n\n::: {.cell-output-display}\n![](Network_Data_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Network_Data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}